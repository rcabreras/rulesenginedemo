@page "/example1"
@using System.Dynamic
@using RulesEngine.Models
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h3>Basic static rule example implemented in sourcecode</h3>
<br/>
<h3>Rules to be evaluated</h3>
<span>count less than 3</span>
<br/>
<p role="status">Current count: @currentCount</p>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br/>
@if (result != null)
{
    <h2>@result</h2>
}

@code {
    private int currentCount = 0;
    private string? result;
    private List<Workflow>? workflow;

    private void IncrementCount()
    {
        currentCount++;
        evaluateRulesBasicExample(currentCount);

    }
    
    private void evaluateRulesBasicExample(int counter)
    {
        dynamic data = new ExpandoObject();
        data.count = counter;
        var inputs = new dynamic[]
        {
            data
        };

        var rules = new List<Rule>();

        var rule = new Rule
        {
            RuleName = "Test Rule",
            SuccessEvent = "Count is within tolerance.",
            ErrorMessage = "Over expected.",
            Expression = "count < 3",
            RuleExpressionType = RuleExpressionType.LambdaExpression
        };
        
        rules.Add(rule);
        
        workflow = new List<Workflow>();

        var exampleWorkflow = new Workflow
        {
            WorkflowName = "Example Workflow",
            Rules = rules
        };

        workflow.Add(exampleWorkflow);

        var bre = new RulesEngine.RulesEngine(workflow.ToArray());
        var resultList = bre.ExecuteAllRulesAsync("Example Workflow", inputs).Result;
        var outcome = resultList.TrueForAll(r => r.IsSuccess);
        result = outcome ? $"Result count is within tolerance" : $"Result count is NOT within tolerance";
    }

}